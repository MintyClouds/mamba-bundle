version: "3.7"
services:
  # # Portainer 
  # agent:
  #   image: portainer/agent:${PORTAINER_AGENT_VERSION}
  #   # hostname: ${HOSTNAME}
  #   restart: unless-stopped
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - /var/lib/docker/volumes:/var/lib/docker/volumes
  #   networks:
  #     - agent_network

  # portainer:
  #   image: portainer/portainer-ce:${PORTAINER_VERSION}
  #   command: -H tcp://agent:9001 --tlsskipverify
  #   restart: always
  #   volumes:
  #     - ${PORTAINER_CONFIG_PATH}:/data
  #   networks:
  #     - agent_network
  #     - public
  #   ports:
  #     - ${PORTAINER_WEB_PORT}:9000
  #     - 8000:8000

  # Plex
  plex:
    image: ghcr.io/linuxserver/plex:${PLEX_VERSION}
    container_name: plex
    #network_mode: host
    hostname: ${HOSTNAME}
    restart: unless-stopped
    ports:
        - '80:80'
        - '${PLEX_WEB_PORT}:32400'
        - '1900:1900/udp'
        - '3005:3005'
        - '5353:5353/udp'
        - '8324:8324'
        - '32410:32410/udp'
        - '32412:32412/udp'
        - '32413:32413/udp'
        - '32414:32414/udp'
        - '32469:32469'
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
      - PLEX_CLAIM= #optional
    volumes:
      - ${PLEX_CONFIG_PATH}:/config
      - ${MEDIA_PATH}:/storage

  # Deluge
  arch-delugevpn:
    image: binhex/arch-delugevpn:${ARCH_DELUGEVPN_VERSION}
    container_name: arch-delugevpn
    hostname: ${HOSTNAME}
    restart: unless-stopped
    ports:
        - '${ARCH_DELUGEVPN_WEB_PORT}:8112'
          # - '8118:8118'
        - '58846:58846'
        - '58946:58946'
    volumes:
        - ${ARCH_DELUGEVPN_CONFIG_PATH}:/config
        - ${MEDIA_PATH}:/data
        - /etc/localtime:/etc/localtime:ro
    cap_add:
        - NET_ADMIN
    environment:
        - VPN_ENABLED=yes
        - VPN_PASS=${ARCH_DELUGEVPN_PASSWORD}
        - VPN_PROV=custom
        - VPN_CLIENT=openvpn
        - STRICT_PORT_FORWARD=yes
        - ENABLE_PRIVOXY=yes
        - LAN_NETWORK=192.168.1.0/24
        - NAME_SERVERS=209.222.18.222,84.200.69.80,37.235.1.174,1.1.1.1,209.222.18.218,37.235.1.177,84.200.70.40,1.0.0.1
        - DELUGE_DAEMON_LOG_LEVEL=info
        - DELUGE_WEB_LOG_LEVEL=info
        - ADDITIONAL_PORTS=<port
        - DEBUG=<true|false>
        - UMASK=022
        - PUID=1000
        - PGID=1000

  nginx-fileserver:
    image: nginx:${NGINX_VERSION}
    container_name: nginx-fileserver
    hostname: ${HOSTNAME}
    restart: unless-stopped
    #     environment:
    #       - PUID=1000
    #       - PGID=1000
    #       - TZ=Europe/London
    volumes:
      - ${NGINX_FILESERVER_CONFIG_PATH}:/etc/nginx/conf.d
      - ${NGINX_STORAGE_PATH}:/storage/serpents-nest/data/projects/writing
    ports:
      - ${NGINX_WEB_PORT}:80

  prowlarr:
    image: ghcr.io/linuxserver/prowlarr:${PROWLARR_VERSION}
    container_name: prowlarr
    hostname: ${HOSTNAME}
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Moscow
    volumes:
      - ${PROWLARR_CONFIG_PATH}:/config
    ports:
      - ${PROWLARR_WEB_PORT}:9696

  lidarr:
    image: ghcr.io/linuxserver/lidarr:${LIDARR_VERSION}
    container_name: lidarr
    hostname: ${HOSTNAME}
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Moscow
    volumes:
      - ${LIDARR_CONFIG_PATH}:/config
      - ${MEDIA_PATH}:/data
    ports:
      - ${LIDARR_WEB_PORT}:8686
    
  radarr:
    image: ghcr.io/linuxserver/radarr:${RADARR_VERSION}
    container_name: radarr
    hostname: ${HOSTNAME}
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Moscow
    volumes:
      - ${RADARR_CONFIG_PATH}:/config
      - ${MEDIA_PATH}:/data
    ports:
      - ${RADARR_WEB_PORT}:7878
    
  sonarr:
    image: ghcr.io/linuxserver/sonarr:${SONARR_VERSION}
    container_name: sonarr
    hostname: ${HOSTNAME}
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Moscow
    volumes:
      - ${SONARR_CONFIG_PATH}:/config
      - ${MEDIA_PATH}:/data
    ports:
      - ${SONARR_WEB_PORT}:8989

  # jellyfin:
  #   image: ghcr.io/linuxserver/jellyfin
  #   container_name: jellyfin
  #   hostname: ${HOSTNAME}
  #   restart: unless-stopped
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/London
  #     # - JELLYFIN_PublishedServerUrl=192.168.0.5 #optional
  #   volumes:
  #     - ${JELLYFIN_CONFIG_PATH}:/config
  #     - ${MEDIA_PATH}:/data/
      
  #   ports:
  #     - ${JELLYFIN_WEB_PORT}:8096
  #     # - 8920:8920 #optional
  #     - 7359:7359/udp #optional
  #     - 1900:1900/udp #optional
  

  photoprism-mariadb:
    ## If MariaDB gets stuck in a restart loop, this points to a memory or filesystem issue:
    ## https://docs.photoprism.app/getting-started/troubleshooting/#fatal-server-errors
    restart: unless-stopped
    image: mariadb:${PHOTOPRISM_MARIADB_VERSION}
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    command: mysqld --innodb-buffer-pool-size=128M --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120
    ## Never store database files on an unreliable device such as a USB flash drive, an SD card, or a shared network folder:
    environment:
      MYSQL_ROOT_PASSWORD: ${PHOTOPRISM_MARIADB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${PHOTOPRISM_MARIADB_DB}
      MYSQL_USER: ${PHOTOPRISM_MARIADB_USER}
      MYSQL_PASSWORD: ${PHOTOPRISM_MARIADB_PASSWORD}
    volumes:
      - "${PHOTOPRISM_MARIADB_DATA_PATH}:/var/lib/mysql" # important, don't remove


  photoprism:
    ## Use photoprism/photoprism:preview for testing preview builds:
    image: photoprism/photoprism:${PHOTOPRISM_VERSION}
    depends_on:
      - photoprism-mariadb
    ## Don't enable automatic restarts until PhotoPrism has been properly configured and tested!
    ## If the service gets stuck in a restart loop, this points to a memory, filesystem, network, or database issue:
    ## https://docs.photoprism.app/getting-started/troubleshooting/#fatal-server-errors
    # restart: unless-stopped
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    ports:
      - "${PHOTOPRISM_WEB_PORT}:2342" # HTTP port (host:container)
    environment:
      PHOTOPRISM_ADMIN_PASSWORD: ${PHOTOPRISM_ADMIN_PASSWORD} 
      PHOTOPRISM_SITE_URL: "http://localhost:2342/"  # public server URL incl http:// or https:// and /path, :port is optional
      PHOTOPRISM_ORIGINALS_LIMIT: 10240               # file size limit for originals in MB (increase for high-res video)
      PHOTOPRISM_HTTP_COMPRESSION: "gzip"            # improves transfer speed and bandwidth utilization (none or gzip)
      PHOTOPRISM_DEBUG: "false"                      # run in debug mode (shows additional log messages)
      PHOTOPRISM_PUBLIC: "false"                     # no authentication required (disables password protection)
      PHOTOPRISM_READONLY: "false"                   # don't modify originals directory (reduced functionality)
      PHOTOPRISM_EXPERIMENTAL: "false"               # enables experimental features
      PHOTOPRISM_DISABLE_CHOWN: "false"              # disables storage permission updates on startup
      PHOTOPRISM_DISABLE_WEBDAV: "false"             # disables built-in WebDAV server
      PHOTOPRISM_DISABLE_SETTINGS: "false"           # disables Settings in Web UI
      PHOTOPRISM_DISABLE_TENSORFLOW: "false"         # disables all features depending on TensorFlow
      PHOTOPRISM_DISABLE_FACES: "false"              # disables facial recognition
      PHOTOPRISM_DISABLE_CLASSIFICATION: "false"     # disables image classification
      PHOTOPRISM_DARKTABLE_PRESETS: "false"          # enables Darktable presets and disables concurrent RAW conversion
      PHOTOPRISM_DETECT_NSFW: "false"                # flag photos as private that MAY be offensive (requires TensorFlow)
      PHOTOPRISM_UPLOAD_NSFW: "true"                 # allows uploads that MAY be offensive
      PHOTOPRISM_DATABASE_DRIVER: "mysql"            # use MariaDB 10.5+ or MySQL 8+ instead of SQLite for improved performance
      PHOTOPRISM_DATABASE_SERVER: "photoprism-mariadb:3306"     # MariaDB or MySQL database server (hostname:port)
      PHOTOPRISM_DATABASE_NAME: ${PHOTOPRISM_MARIADB_DB}         # MariaDB or MySQL database schema name
      PHOTOPRISM_DATABASE_USER: ${PHOTOPRISM_MARIADB_USER}         # MariaDB or MySQL database user name
      PHOTOPRISM_DATABASE_PASSWORD: ${PHOTOPRISM_MARIADB_PASSWORD}       # MariaDB or MySQL database user password
      PHOTOPRISM_SITE_TITLE: "PhotoPrism"
      PHOTOPRISM_SITE_CAPTION: "MintyClouds Photo Gallery"
      PHOTOPRISM_SITE_DESCRIPTION: ""
      PHOTOPRISM_SITE_AUTHOR: "Euphemia Deathridge"
      ## Run/install on first startup (options: update, gpu, tensorflow, davfs, nano, clean):
      # PHOTOPRISM_INIT: "gpu tensorflow"
      ## Hardware video transcoding config (optional)
      # PHOTOPRISM_FFMPEG_BUFFERS: "64"              # FFmpeg capture buffers (default: 32)
      # PHOTOPRISM_FFMPEG_BITRATE: "32"              # FFmpeg encoding bitrate limit in Mbit/s (default: 50)
      # PHOTOPRISM_FFMPEG_ENCODER: "h264_v4l2m2m"    # use Video4Linux for AVC transcoding (default: libx264)
      # PHOTOPRISM_FFMPEG_ENCODER: "h264_qsv"        # use Intel Quick Sync Video for AVC transcoding (default: libx264)
      ## Run as a specific user, group, or with a custom umask (does not work together with "user:")
      # PHOTOPRISM_UID: 1000
      # PHOTOPRISM_GID: 1000
      # PHOTOPRISM_UMASK: 0000
      HOME: "/photoprism"
    ## Start as a non-root user (see https://docs.docker.com/engine/reference/run/#user)
    user: "${PHOTOPRISM_UID_GID}"        # (UID:GID)
    ## Share hardware devices with FFmpeg and TensorFlow (optional):
    # devices:
    #  - "/dev/dri:/dev/dri"
    #  - "/dev/nvidia0:/dev/nvidia0"
    #  - "/dev/nvidiactl:/dev/nvidiactl"
    #  - "/dev/video11:/dev/video11" # Video4Linux (h264_v4l2m2m)
    working_dir: "/photoprism"
    ## Storage Folders: "~" is a shortcut for your home directory, "." for the current directory
    volumes:
      - "${PHOTOPRISM_STORAGE_PATH}:/photoprism/storage"          # *writable* storage folder for cache, database, and sidecar files (never remove)
      - "${PHOTOPRISM_ORIGINALS_PATH}:/photoprism/originals"      # original media files (photos and videos)
      - "${PHOTOPRISM_IMPORT_PATH}:/photoprism/import"            # *optional* base folder from which files can be imported to originals
      - "${PHOTOPRISM_IMPORT_DEVICES_PATH}:/photoprism/import/devices"
      - "${PHOTOPRISM_IMPORT_PERSONAL_PATH}:/photoprism/import/personal"
      - "${PHOTOPRISM_IMPORT_IMAGES_PATH}:/photoprism/import/images"
      - "${PHOTOPRISM_IMPORT_NSFW_PATH}:/photoprism/import/nsfw"
      
networks:
  agent_network:
  public:
