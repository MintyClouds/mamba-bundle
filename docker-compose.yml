version: "3.7"
services:
  # # Portainer 
  # agent:
  #   image: portainer/agent:${PORTAINER_AGENT_VERSION}
  #   # hostname: ${HOSTNAME}
  #   restart: unless-stopped
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - /var/lib/docker/volumes:/var/lib/docker/volumes
  #   networks:
  #     - agent_network

  # portainer:
  #   image: portainer/portainer-ce:${PORTAINER_VERSION}
  #   command: -H tcp://agent:9001 --tlsskipverify
  #   restart: always
  #   volumes:
  #     - ${PORTAINER_CONFIG_PATH}:/data
  #   networks:
  #     - agent_network
  #     - public
  #   ports:
  #     - ${PORTAINER_WEB_PORT}:9000
  #     - 8000:8000

  # Plex
  plex:
    image: ghcr.io/linuxserver/plex:${PLEX_VERSION}
    container_name: plex
    #network_mode: host
    hostname: ${HOSTNAME}
    restart: unless-stopped
    ports:
        - '80:80'
        - '${PLEX_WEB_PORT}:32400'
        - '1900:1900/udp'
        - '3005:3005'
        - '5353:5353/udp'
        - '8324:8324'
        - '32410:32410/udp'
        - '32412:32412/udp'
        - '32413:32413/udp'
        - '32414:32414/udp'
        - '32469:32469'
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
      - PLEX_CLAIM= #optional
    volumes:
      - ${PLEX_CONFIG_PATH}:/config
      - ${MEDIA_PATH}:/storage

  # Deluge
  arch-delugevpn:
    image: binhex/arch-delugevpn:${ARCH_DELUGEVPN_VERSION}
    container_name: arch-delugevpn
    hostname: ${HOSTNAME}
    restart: unless-stopped
    ports:
        - '${ARCH_DELUGEVPN_WEB_PORT}:8112'
          # - '8118:8118'
        - '58846:58846'
        - '58946:58946'
    volumes:
        - ${ARCH_DELUGEVPN_CONFIG_PATH}:/config
        - ${MEDIA_PATH}:/data
        - /etc/localtime:/etc/localtime:ro
    cap_add:
        - NET_ADMIN
    environment:
        - VPN_ENABLED=yes
        - VPN_PASS=${ARCH_DELUGEVPN_PASSWORD}
        - VPN_PROV=custom
        - VPN_CLIENT=openvpn
        - STRICT_PORT_FORWARD=yes
        - ENABLE_PRIVOXY=yes
        - LAN_NETWORK=192.168.1.0/24
        - NAME_SERVERS=209.222.18.222,84.200.69.80,37.235.1.174,1.1.1.1,209.222.18.218,37.235.1.177,84.200.70.40,1.0.0.1
        - DELUGE_DAEMON_LOG_LEVEL=info
        - DELUGE_WEB_LOG_LEVEL=info
        - ADDITIONAL_PORTS=<port
        - DEBUG=<true|false>
        - UMASK=022
        - PUID=1000
        - PGID=1000

  nginx-fileserver:
    image: nginx:${NGINX_VERSION}
    container_name: nginx-fileserver
    hostname: ${HOSTNAME}
    restart: unless-stopped
    #     environment:
    #       - PUID=1000
    #       - PGID=1000
    #       - TZ=Europe/London
    volumes:
      - ${NGINX_FILESERVER_CONFIG_PATH}:/etc/nginx/conf.d
      - ${NGINX_STORAGE_PATH}:/storage/serpents-nest/data/projects/writing
    ports:
      - ${NGINX_WEB_PORT}:80

  prowlarr:
    image: ghcr.io/linuxserver/prowlarr:${PROWLARR_VERSION}
    container_name: prowlarr
    hostname: ${HOSTNAME}
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Moscow
    volumes:
      - ${PROWLARR_CONFIG_PATH}:/config
    ports:
      - ${PROWLARR_WEB_PORT}:9696

  lidarr:
    image: ghcr.io/linuxserver/lidarr:${LIDARR_VERSION}
    container_name: lidarr
    hostname: ${HOSTNAME}
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Moscow
    volumes:
      - ${LIDARR_CONFIG_PATH}:/config
      - ${MEDIA_PATH}:/data
    ports:
      - ${LIDARR_WEB_PORT}:8686
    
  radarr:
    image: ghcr.io/linuxserver/radarr:${RADARR_VERSION}
    container_name: radarr
    hostname: ${HOSTNAME}
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Moscow
    volumes:
      - ${RADARR_CONFIG_PATH}:/config
      - ${MEDIA_PATH}:/data
    ports:
      - ${RADARR_WEB_PORT}:7878
    
  sonarr:
    image: ghcr.io/linuxserver/sonarr:${SONARR_VERSION}
    container_name: sonarr
    hostname: ${HOSTNAME}
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Moscow
    volumes:
      - ${SONARR_CONFIG_PATH}:/config
      - ${MEDIA_PATH}:/data
    ports:
      - ${SONARR_WEB_PORT}:8989

  # jellyfin:
  #   image: ghcr.io/linuxserver/jellyfin
  #   container_name: jellyfin
  #   hostname: ${HOSTNAME}
  #   restart: unless-stopped
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/London
  #     # - JELLYFIN_PublishedServerUrl=192.168.0.5 #optional
  #   volumes:
  #     - ${JELLYFIN_CONFIG_PATH}:/config
  #     - ${MEDIA_PATH}:/data/
      
  #   ports:
  #     - ${JELLYFIN_WEB_PORT}:8096
  #     # - 8920:8920 #optional
  #     - 7359:7359/udp #optional
  #     - 1900:1900/udp #optional
    

networks:
  agent_network:
  public:
